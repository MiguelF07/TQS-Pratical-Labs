// Generated by Selenium IDE
package com.tqs;

import org.junit.jupiter.api.AfterEach;
import org.assertj.core.api.SoftAssertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;

import static org.hamcrest.CoreMatchers.is;
import static org.assertj.core.api.Assertions.assertThat;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
import io.github.bonigarcia.seljup.SeleniumJupiter;

@ExtendWith(SeleniumJupiter.class)
public class Lab4_2_Teste2 {
  // private WebDriver driver;
  private Map<String, Object> vars;
  // JavascriptExecutor js;
  // @BeforeEach
  // public void setUp() {
  //   driver = new ChromeDriver();
  //   js = (JavascriptExecutor) driver;
  //   vars = new HashMap<String, Object>();
  // }
  // @AfterEach
  // public void tearDown() {
  //   driver.quit();
  // }

  //IMPORTANT: Uncomment lines 74 and 76 for the tests to fail
  @Test
  public void teste2(ChromeDriver driver) {
    vars = new HashMap<String, Object>();
    driver.get("https://blazedemo.com/");
    driver.manage().window().setSize(new Dimension(1200, 771));
    driver.findElement(By.name("fromPort")).click();
    {
      WebElement dropdown = driver.findElement(By.name("fromPort"));
      dropdown.findElement(By.xpath("//option[. = 'San Diego']")).click();
    }
    vars.put("city1Selected", driver.findElement(By.name("fromPort")).getAttribute("value"));
    driver.findElement(By.name("toPort")).click();
    {
      WebElement dropdown = driver.findElement(By.name("toPort"));
      dropdown.findElement(By.xpath("//option[. = 'London']")).click();
    }
    vars.put("city2Selected", driver.findElement(By.name("toPort")).getAttribute("value"));
    driver.findElement(By.cssSelector(".btn-primary")).click();
    driver.findElement(By.cssSelector("th:nth-child(4)")).click();
    assertThat(driver.findElement(By.cssSelector("th:nth-child(4)")).getText()).isEqualTo("Departs: "+vars.get("city1Selected").toString());
    driver.findElement(By.cssSelector("th:nth-child(5)")).click();
    assertThat(driver.findElement(By.cssSelector("th:nth-child(5)")).getText()).isEqualTo("Arrives: "+vars.get("city2Selected").toString());
    driver.findElement(By.cssSelector("tr:nth-child(2) > td:nth-child(4)")).click();
    vars.put("airlineSelected", driver.findElement(By.cssSelector("tr:nth-child(2) > td:nth-child(4)")).getText());
    driver.findElement(By.cssSelector("tr:nth-child(2) > td:nth-child(3)")).click();
    vars.put("flightNumber", driver.findElement(By.cssSelector("tr:nth-child(2) > td:nth-child(3)")).getText());
    driver.findElement(By.cssSelector("tr:nth-child(2) .btn")).click();
    driver.findElement(By.cssSelector("p:nth-child(2)")).click();
    //assertThat(driver.findElement(By.cssSelector("p:nth-child(2)")).getText()).isEqualTo("Airline: "+vars.get("airlineSelected").toString());
    driver.findElement(By.cssSelector("p:nth-child(3)")).click();
    //assertThat(driver.findElement(By.cssSelector("p:nth-child(3)")).getText()).isEqualTo("Flight Number: "+vars.get("flightNumber").toString());
    driver.findElement(By.id("inputName")).click();
    driver.findElement(By.id("inputName")).sendKeys("Carl");
    driver.findElement(By.id("address")).click();
    driver.findElement(By.id("address")).sendKeys("123 Main St.");
    driver.findElement(By.id("city")).click();
    driver.findElement(By.id("city")).sendKeys("Feira");
    driver.findElement(By.id("state")).click();
    driver.findElement(By.id("state")).sendKeys("California");
    driver.findElement(By.id("zipCode")).click();
    driver.findElement(By.id("zipCode")).sendKeys("56473");
    driver.findElement(By.id("cardType")).click();
    driver.findElement(By.id("creditCardNumber")).click();
    driver.findElement(By.id("creditCardNumber")).sendKeys("546374536382");
    driver.findElement(By.id("creditCardMonth")).click();
    driver.findElement(By.id("creditCardYear")).click();
    driver.findElement(By.id("nameOnCard")).click();
    driver.findElement(By.id("nameOnCard")).sendKeys("Carl Johnson");
    driver.findElement(By.cssSelector(".btn-primary")).click();
    assertThat(driver.getTitle()).isEqualTo("BlazeDemo Confirmation");
  }
}
